/**
 * @file gcplayernearbyevent.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>

SKYSCRAPER_BEGIN

/**
 * @enum eRequirePlayerAction
 */
enum eRequirePlayerAction : uint32_t
{
    ERequirePlayerAction_None = 0,
    ERequirePlayerAction_Fire = 1,
    ERequirePlayerAction_InShip = 2,
    ERequirePlayerAction_OnFoot = 3,
    ERequirePlayerAction_OnFootOutside = 4,
    ERequirePlayerAction_Upload = 5,
};

/**
 * @enum eDistanceCheckType
 */
enum eDistanceCheckType : uint32_t
{
    EDistanceCheckType_Radius = 0,
    EDistanceCheckType_BoundingBox = 1,
};

/**
 * @class cGcPlayerNearbyEvent
 */
class cGcPlayerNearbyEvent : cTkMetaData::Registrar<cGcPlayerNearbyEvent>, cTkMetaDataXML::Registrar<cGcPlayerNearbyEvent>
{
  public:
    enum
    {
        mu64ClassNameHash = 0x8A8D7D07807BE9DC,
    };
    enum
    {
        mu64TemplateHash = 0x3AA04401A1C10893,
    };

    eRequirePlayerAction RequirePlayerAction;
    float mfDistance;
    float mfAngle;
    bool mbAnglePlayerRelative;
    float mfAngleOffset;
    bool mbAngleReflected;
    float mfAngleMinDistance;
    eDistanceCheckType DistanceCheckType;
    bool mbInverse;
    bool mbOnlyForLocalPlayer;
    bool mbIncludeAllPhysics;
    bool mbIncludeMobileNPCs;
    bool mbTeleporterCountsAsPlayer;
};

SKYSCRAPER_END
