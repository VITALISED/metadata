/**
 * @file gcplayersquadronconfig.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-15
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/spaceship/ai/gcaispaceshipmodeldata.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcPlayerSquadronConfig
 */
class cGcPlayerSquadronConfig
{
  public:
    enum
    {
        ClassNameHash = 0xD3C0DCB43542B48,
    };

    union
    {
        struct
        {
            cTkFixedString<32,char> macSquadName;
            cTkFixedArray<cTkVector2, 4> maPilotRankTraitRanges;
            cTkFixedArray<TkID<128>, 4> maPilotRankAttackDefinitions;
            float mfSummonArriveTime;
            float mfSummonArriveTimeIntervalMin;
            float mfSummonArriveTimeIntervalMax;
            float mfSummonStartSpeed;
            float mfSummonLimitTurningTime;
            float mfMinSpeedForSummonInMoveDir;
            float mfSummonSpaceSpawnRangeMin;
            float mfSummonSpaceSpawnRangeMax;
            float mfSummonSpaceSpawnAngleMin;
            float mfSummonSpaceSpawnAngleMax;
            float mfSummonPlanetPitchMin;
            float mfSummonPlanetPitchMax;
            float mfSummonPlanetYawMin;
            float mfSummonPlanetYawMax;
            float mfSummonPlanetDistance;
            bool mbSummonInFormation;
            float mfSummonInFormationFwdOffset;
            float mfLeavingForceScaleDistMin;
            float mfLeavingForceScaleDistMax;
            float mfLeavingMaxForceMultiplier;
            float mfLeavingFromPlanetOrbitWarpDist;
            float mfLeavingFromPlanetOrbitMinIncline;
            float mfLeavingFromPlanetOrbitMaxSpeed;
            float mfLeavingFromSpaceWarpDist;
            float mfLeavingFromSpaceAngleFromFwdMin;
            float mfLeavingFromSpaceAngleFromFwdMax;
            float mfFormationOffsetRotationPeriod;
            float mfFormationOffsetRotationMaxSpeed;
            float mfFormationOffsetZOffsetVarianceMinSpeedScale;
            float mfFormationOffsetZOffsetVarianceMaxSpeedScale;
            float mfFormationOffsetZOffsetVariancePeriod;
            float mfFormationOffsetZOffsetVarianceMin;
            float mfFormationOffsetZOffsetVarianceMax;
            cTkVector3 mFormationOffset;
            float mfFormationOffsetCylinderWidth;
            float mfFormationOffsetCylinderHeight;
            float mfFormationOffsetCylinderLength;
            cTkVector3 mFormationOffsetThirdPerson;
            float mfFormationOffsetCylinderWidthThirdPerson;
            float mfFormationOffsetCylinderHeightThirdPerson;
            float mfFormationOffsetCylinderLengthThirdPerson;
            cTkVector3 mCombatFormationOffset;
            float mfCombatFormationOffsetCylinderWidth;
            float mfCombatFormationOffsetCylinderHeight;
            float mfCombatFormationOffsetCylinderLength;
            cTkVector3 mCombatFormationOffsetThirdPerson;
            float mfCombatFormationOffsetCylinderWidthThirdPerson;
            float mfCombatFormationOffsetCylinderHeightThirdPerson;
            float mfCombatFormationOffsetCylinderLengthThirdPerson;
            float mfMaintainFormationStrengthVariance;
            float mfMaintainFormationInCombatMinTime;
            float mfMaintainFormationInCombatMaxTime;
            float mfMaintainFormationStartSmoothTime;
            float mfMaintainFormationMaxForce;
            float mfMaintainFormationLockStrength;
            float mfMaintainFormationLockStrengthCombat;
            float mfMaintainFormationLockStrengthBoosting;
            float mfMaintainFormationPostBoostSmoothTime;
            float mfMaintainFormationLockAlignStrength;
            float mfMaintainFormationLockRollAlignStrength;
            float mfMaintainFormationAlignMinDist;
            float mfMaintainFormationAlignMaxDist;
            float mfMaintainFormationAlignMinSpeed;
            float mfMaintainFormationAlignMaxSpeed;
            float mfMaintainFormationSharpTurnMinSpeed;
            float mfMaintainFormationSharpTurnMinSpeedForce;
            float mfJoinFormationMaxForce;
            float mfJoinFormationOffset;
            float mfJoinFormationArrivalTolerance;
            float mfJoinFormationBoostMaxSpeed;
            float mfJoinFormationBoostMinDist;
            float mfJoinFormationBoostMaxDist;
            float mfJoinFormationBoostAlignStrength;
            float mfJoinFormationBrakeAlignStrength;
            float mfJoinFormationBrakeDist;
            float mfJoinFormationMinSpeed;
            float mfJoinFormationMaxSpeedBrake;
            float mfBreakFormationTime;
            float mfBreakFormationMaxForce;
            float mfBreakFormationMinTurnAngle;
            float mfBreakFormationMaxTurnAngle;
            float mfMinTimeBetweenFormationBreaks;
            int miMinShipsInFormationDuringCombat;
            int miMaxShipsInFormationDuringCombat;
            float mfOutOfFormationMinTime;
            float mfOutOfFormationMaxTime;
            cTkDynamicArray<cGcAISpaceshipModelData> maRandomSpaceshipResources;
            cTkDynamicArray<cTkFixedString<128,char>> maRandomPilotNPCResources;
        };
    };
};

SKYSCRAPER_END
