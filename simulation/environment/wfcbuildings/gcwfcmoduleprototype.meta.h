/**
 * @file gcwfcmoduleprototype.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/environment/wfcbuildings/gcweightedresource.meta.h>
#include <simulation/environment/wfcbuildings/gcwfcterrainconstraint.meta.h>
#include <simulation/environment/wfcbuildings/gcwfcface.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eTerrainEdits
 */
enum eTerrainEdits : uint32_t
{
    ETerrainEdits_None = 0,
    ETerrainEdits_ClearEntireBlock = 1,
    ETerrainEdits_UseScene = 2,
    ETerrainEdits_UseBasebuildingEdits = 3,
};

/**
 * @enum eFreighterModuleType
 */
enum eFreighterModuleType : uint32_t
{
    EFreighterModuleType_None = 0,
    EFreighterModuleType_Room = 1,
    EFreighterModuleType_Corridor = 2,
};

/**
 * @class cGcWFCModulePrototype
 */
class cGcWFCModulePrototype
{
  public:
    enum
    {
        ClassNameHash = 0xEB956F6AA5C15F5C,
    };

    inline cGcWFCModulePrototype() {}
    cGcWFCModulePrototype* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            cTkFixedString<128,char> macName;
            TkID<128> mId;
            cTkFixedString<128,char> macGroup;
            float mfRelativeProbability;
            bool mbInclude;
            bool mbExcludeOnGround;
            bool mbExcludeOnTop;
            bool mbIndoors;
            bool mbLimitToOnePerLevel;
            bool mbExcludeRotatedVariants;
            bool mbDontRotateModel;
            TkID<128> mLayoutGroup;
            cTkDynamicArray<cGcWeightedResource> maScenes;
            eTerrainEdits TerrainEdits;
            cTkDynamicArray<cGcWFCTerrainConstraint> maTerrainConstraints;
            cGcWFCFace Left;
            cGcWFCFace Down;
            cGcWFCFace Back;
            cGcWFCFace Right;
            cGcWFCFace Up;
            cGcWFCFace Forward;
            eFreighterModuleType FreighterModuleType;
        };
    };
};

SKYSCRAPER_END
