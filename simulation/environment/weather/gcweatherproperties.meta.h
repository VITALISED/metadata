/**
 * @file gcweatherproperties.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/environment/gcfogproperties.meta.h>
#include <simulation/environment/weather/gcweathercolourmodifiers.meta.h>
#include <simulation/environment/gcstormproperties.meta.h>
#include <simulation/environment/weather/gchazardvalues.meta.h>
#include <graphics/gcscreenfilters.meta.h>
#include <simulation/environment/gcskyproperties.meta.h>
#include <simulation/environment/gclightshaftproperties.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcWeatherProperties
 */
class cGcWeatherProperties
{
  public:
    enum
    {
        ClassNameHash = 0xD216CE8E772352C,
    };

    inline cGcWeatherProperties() {}
    cGcWeatherProperties* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            TkID<128> mName;
            bool mbUseWeatherFog;
            cGcFogProperties Fog;
            cGcFogProperties FlightFog;
            cGcFogProperties StormFog;
            cGcFogProperties ExtremeFog;
            cGcWeatherColourModifiers ExtremeColourModifiers;
            cTkFixedArray<float, 4> maRainbowChance;
            cTkDynamicArray<cGcStormProperties> maStorms;
            cTkDynamicArray<cTkFixedString<128,char>> maHeavyAir;
            float mfLowStormsChance;
            float mfHighStormsChance;
            float mfExtremeWeatherChance;
            bool mbOverrideTemperature;
            cTkFixedArray<cGcHazardValues, 5> maTemperature;
            bool mbOverrideToxicity;
            cTkFixedArray<cGcHazardValues, 5> maToxicity;
            bool mbOverrideRadiation;
            cTkFixedArray<cGcHazardValues, 5> maRadiation;
            cTkFixedArray<cGcHazardValues, 5> maLifeSupportDrain;
            cTkDynamicArray<cGcScreenFilters> maStormFilterOptions;
            bool mbUseWeatherSky;
            cGcSkyProperties Sky;
            bool mbUseLightShaftProperties;
            cGcLightShaftProperties LightShaftProperties;
            bool mbUseStormLightShaftProperties;
            cGcLightShaftProperties StormLightShaftProperties;
            cTkDynamicArray<TkID<128>> maWeatherEffectsIds;
            cTkDynamicArray<TkID<128>> maWeatherHazardsIds;
        };
    };
};

SKYSCRAPER_END
