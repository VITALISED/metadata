/**
 * @file gcscaneventdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/components/gameplay/gcinteractiontype.meta.h>
#include <reality/gcalienrace.meta.h>
#include <simulation/environment/gcbuildingclassification.meta.h>
#include <simulation/gcscaneventsolarsystemlookup.meta.h>
#include <simulation/gcscaneventtriggers.meta.h>
#include <reality/gctechnologycategory.meta.h>
#include <toolkit/tktextureresource.meta.h>
#include <graphics/hud/gcscannericonhighlighttypes.meta.h>
#include <audio/gcaudiowwiseevents.meta.h>
#include <utilities/data/gcresourceelement.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eEventStartType
 */
enum eEventStartType : uint32_t
{
    EEventStartType_None = 0,
    EEventStartType_Special = 1,
    EEventStartType_Discovered = 2,
    EEventStartType_Timer = 3,
    EEventStartType_ObjectScan = 4,
    EEventStartType_LeaveBuilding = 5,
};

/**
 * @enum eEventEndType
 */
enum eEventEndType : uint32_t
{
    EEventEndType_None = 0,
    EEventEndType_Proximity = 1,
    EEventEndType_Interact = 2,
    EEventEndType_EnterBuilding = 3,
    EEventEndType_TimedInteract = 4,
};

/**
 * @enum eEventPriority
 */
enum eEventPriority : uint32_t
{
    EEventPriority_Regular = 0,
    EEventPriority_High = 1,
};

/**
 * @enum eBuildingLocation
 */
enum eBuildingLocation : uint32_t
{
    EBuildingLocation_Nearest = 0,
    EBuildingLocation_AllNearest = 1,
    EBuildingLocation_Random = 2,
    EBuildingLocation_RandomOnNearPlanet = 3,
    EBuildingLocation_RandomOnFarPlanet = 4,
    EBuildingLocation_PlanetSearch = 5,
    EBuildingLocation_PlayerSettlement = 6,
};

/**
 * @enum eBuildingType
 */
enum eBuildingType : uint32_t
{
    EBuildingType_Any = 0,
    EBuildingType_AnyShelter = 1,
    EBuildingType_AnyNPC = 2,
    EBuildingType_BuildingClass = 3,
    EBuildingType_SpaceStation = 4,
    EBuildingType_SpaceAnomaly = 5,
    EBuildingType_Atlas = 6,
    EBuildingType_Freighter = 7,
    EBuildingType_FreighterBase = 8,
    EBuildingType_ExternalPlanetBase = 9,
    EBuildingType_PlanetBaseTerminal = 10,
    EBuildingType_Expedition = 11,
    EBuildingType_TutorialShelter = 12,
    EBuildingType_MPMissionFreighter = 13,
    EBuildingType_Nexus = 14,
    EBuildingType_InitialDistressSignal = 15,
    EBuildingType_SpaceMarker = 16,
    EBuildingType_NexusEggMachine = 17,
    EBuildingType_PhotoTarget = 18,
    EBuildingType_SettlementConstruction = 19,
    EBuildingType_UnownedSettlement = 20,
    EBuildingType_NPC_HideOut = 21,
    EBuildingType_FriendlyDrone = 22,
};

/**
 * @enum eSolarSystemLocation
 */
enum eSolarSystemLocation : uint32_t
{
    ESolarSystemLocation_Local = 0,
    ESolarSystemLocation_Near = 1,
    ESolarSystemLocation_LocalOrNear = 2,
    ESolarSystemLocation_NearWithNoExpeditions = 3,
    ESolarSystemLocation_FromList = 4,
    ESolarSystemLocation_SeasonParty = 5,
};

/**
 * @class cGcScanEventData
 */
class cGcScanEventData
{
  public:
    enum
    {
        ClassNameHash = 0x7BBBCE7D7BC0F1F4,
    };

    inline cGcScanEventData() {}
    cGcScanEventData* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            TkID<256> mName;
            TkID<256> mForceInteraction;
            cGcInteractionType ForceInteractionType;
            cGcAlienRace RequireInteractionRace;
            bool mbForceBroken;
            bool mbForceFixed;
            bool mbForceOverridesAll;
            TkID<128> mForceOverrideEncounter;
            bool mbIsCommunityPortalOverride;
            bool mbClearForcedInteractionOnCompletion;
            float mfBuildingPreventionRadius;
            bool mbUseMissionTradingDataOverride;
            bool mbAlwaysShow;
            bool mbNeverShow;
            bool mbShowOnlyIfSequenceTarget;
            TkID<256> mPlanetLabelText;
            float mfSurveyDistance;
            TkID<256> mSurveyDiscoveryOSDMessage;
            eEventStartType EventStartType;
            eEventEndType EventEndType;
            eEventPriority EventPriority;
            bool mbCanEndFromOutsideMission;
            bool mbDisableMultiplayerSync;
            bool mbReplaceEventIfAlreadyActive;
            eBuildingLocation BuildingLocation;
            eBuildingType BuildingType;
            cGcBuildingClassification BuildingClass;
            bool mbAllowFriendsBases;
            bool mbForceWideRandom;
            bool mbMustFindSystem;
            bool mbAllowOverriddenBuildings;
            eSolarSystemLocation SolarSystemLocation;
            cGcScanEventSolarSystemLookup SolarSystemAttributes;
            cGcScanEventSolarSystemLookup SolarSystemAttributesFallback;
            bool mbForceRestartInteraction;
            TkID<128> mHasReward;
            TkID<256> mNextOption;
            cGcScanEventTriggers TriggerActions;
            cTkDynamicArray<cTkFixedString<256,char>> maUAsList;
            cGcTechnologyCategory TechShopType;
            cTkFixedString<32,char> macOSDMessage;
            cTkFixedString<32,char> macInterstellarOSDMessage;
            cTkFixedString<32,char> macMarkerLabel;
            cTkTextureResource MarkerIcon;
            cGcScannerIconHighlightTypes MissionMarkerHighlightStyleOverride;
            float mfStartTime;
            float mfMessageTime;
            float mfMessageDisplayTime;
            cGcAudioWwiseEvents MessageAudio;
            float mfIconTime;
            float mfTooltipTime;
            bool mbTooltipRepeats;
            bool mbShowEndTooltip;
            cTkFixedString<32,char> macTooltipMessage;
            cGcResourceElement ResourceOverride;
        };
    };
};

SKYSCRAPER_END
