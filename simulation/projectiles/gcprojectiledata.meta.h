/**
 * @file gcprojectiledata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <utilities/data/gcresourceelement.meta.h>
#include <audio/gcaudiowwiseevents.meta.h>
#include <simulation/projectiles/gcdamagetype.meta.h>
#include <simulation/projectiles/gcprojectilelinedata.meta.h>
                            #include <simulation/projectiles/gcprojectileimpactdata.meta.h>
#include <gameplay/gcimpactcombateffectdata.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eBehaviourFlags
 */
enum exBehaviourFlags : uint32_t
{
FBehaviourFlags_DestroyTerrain = 1,
FBehaviourFlags_DestroyAsteroids = 2,
FBehaviourFlags_GatherResources = 4,
FBehaviourFlags_Homing = 8,
FBehaviourFlags_HomingLaser = 16,
FBehaviourFlags_ScareCreatures = 32,
FBehaviourFlags_ExplosionForce = 64,
};

/**
 * @enum eClass
 */
enum eClass : uint32_t
{
    EClass_Player = 0,
    EClass_PlayerShip = 1,
    EClass_Ship = 2,
    EClass_Robot = 3,
};

/**
 * @class cGcProjectileData
 */
class cGcProjectileData
{
  public:
    enum
    {
        ClassNameHash = 0x98B648B5C054B7F7,
    };

    inline cGcProjectileData() {}
    cGcProjectileData* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            TkID<128> mId;
            cGcResourceElement Model;
            cGcAudioWwiseEvents FireAudioEvent;
            cGcAudioWwiseEvents ChargedFireAudioEvent;
            cGcAudioWwiseEvents OverheatAudioEvent;
            float mfScale;
            bool mbIsAutonomous;
            bool mbApplyCombatLevelMultipliers;
            float mfRadius;
            float mfCapsuleHeight;
            float mfDefaultSpeed;
            float mfGravity;
            float mfLife;
            float mfOffset;
            float mfRagdollPush;
            float mfPhysicsPush;
            float mfDroneImpulse;
            int miDefaultDamage;
            float mfExtraPlayerDamage;
            cGcDamageType DamageType;
            int miDefaultBounces;
            float mfBounceMaxSpeed;
            float mfBounceDamping;
            float mfBounceFinalStopTime;
            bool mbHitOnBounce;
            TkID<128> mPlayerDamage;
            float mfCriticalHitModifier;
            float mfPiercingDamagePercentage;
            bool mbUseCustomBulletData;
            cGcProjectileLineData CustomBulletData;
            bool mbUseDamageNumberData;
            float mfDamageImpactMergeTime;
            float mfDamageImpactTimeBetweenNumbers;
            float mfDamageImpactMinDistance;
            cTkColour mColour;
            bool mbOverrideLightColour;
            cTkColour mLightColour;
            exBehaviourFlags BehaviourFlags;
            eClass Class;
            TkID<128> mDefaultImpact;
            TkID<128> mCriticalImpact;
            cTkDynamicArray<cGcProjectileImpactData> maImpacts;
            cTkVector3 mImpactOffset;
            cTkDynamicArray<cGcImpactCombatEffectData> maCombatEffectsOnImpact;
        };
    };
};

SKYSCRAPER_END
