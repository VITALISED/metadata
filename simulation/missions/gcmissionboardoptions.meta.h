/**
 * @file gcmissionboardoptions.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/missions/types/gcmissiontype.meta.h>
#include <simulation/missions/types/gcmissiondifficulty.meta.h>
#include <simulation/missions/types/gcmissionfaction.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eDefaultItemTypeForInitialWarp
 */
enum eDefaultItemTypeForInitialWarp : uint32_t
{
    EDefaultItemTypeForInitialWarp_None = 0,
    EDefaultItemTypeForInitialWarp_PrimaryProduct = 1,
    EDefaultItemTypeForInitialWarp_PrimarySubstance = 2,
    EDefaultItemTypeForInitialWarp_SecondaryProduct = 3,
    EDefaultItemTypeForInitialWarp_SecondarySubstance = 4,
};

/**
 * @class cGcMissionBoardOptions
 */
class cGcMissionBoardOptions
{
  public:
    enum
    {
        ClassNameHash = 0xDD272E15749CCDF5,
    };

    inline cGcMissionBoardOptions() {}
    cGcMissionBoardOptions* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            cGcMissionType Type;
            cGcMissionDifficulty Difficulty;
            int miMinRank;
            bool mbCloseMissionGiver;
            bool mbIsGuildShopMission;
            bool mbIsPlanetProcMission;
            bool mbIsMultiplayerEventMission;
            TkID<128> mRewardPenaltyOnAbandon;
            cTkDynamicArray<cGcMissionFaction> maFaction;
            int miWeighting;
            bool mbIgnoreCalculatedObjective;
            TkID<256> mMultiplayerMissionInitialWarpScanEvent;
            cTkDynamicArray<TkID<256>> maDefaultItemInitialWarpScanEvents;
            eDefaultItemTypeForInitialWarp DefaultItemTypeForInitialWarp;
            cTkDynamicArray<TkID<128>> maBasePartBlueprints;
        };
    };
};

SKYSCRAPER_END
