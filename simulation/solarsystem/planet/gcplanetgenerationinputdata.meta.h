/**
 * @file gcplanetgenerationinputdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/galaxy/gcgalaxystartypes.meta.h>
#include <simulation/solarsystem/planet/gcplanetclass.meta.h>
#include <simulation/solarsystem/planet/gcplanetsize.meta.h>
#include <simulation/solarsystem/planet/gcbiometype.meta.h>
#include <simulation/solarsystem/planet/gcbiomesubtype.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcPlanetGenerationInputData
 */
class cGcPlanetGenerationInputData
{
  public:
    enum
    {
        ClassNameHash = 0x2E161A5A69971115,
    };

    inline cGcPlanetGenerationInputData() {}
    cGcPlanetGenerationInputData* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            cTkSeed mSeed;
            cGcGalaxyStarTypes Star;
            cGcPlanetClass Class;
            TkID<128> mCommonSubstance;
            TkID<128> mRareSubstance;
            cGcPlanetSize PlanetSize;
            cGcBiomeType Biome;
            cGcBiomeSubType BiomeSubType;
            bool mbHasRings;
            bool mbForceContinents;
            bool mbInEmptySystem;
            bool mbInAbandonedSystem;
            bool mbInPirateSystem;
            bool mbPrime;
            int miRealityIndex;
        };
    };
};

SKYSCRAPER_END
