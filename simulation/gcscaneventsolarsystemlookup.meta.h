/**
 * @file gcscaneventsolarsystemlookup.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-15
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <reality/gcalienrace.meta.h>
#include <simulation/galaxy/gcgalaxystaranomaly.meta.h>
#include <simulation/solarsystem/planet/gcplayerconflictdata.meta.h>
#include <simulation/galaxy/gcgalaxystartypes.meta.h>
#include <simulation/solarsystem/planet/gcplanettradingdata.meta.h>
#include <simulation/solarsystem/planet/gcbiometype.meta.h>
#include <simulation/solarsystem/planet/gcbiomesubtype.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcScanEventSolarSystemLookup
 */
class cGcScanEventSolarSystemLookup
{
  public:
    enum
    {
        ClassNameHash = 0xE523CFAD6AFB4BB6,
    };

    union
    {
        struct
        {
            bool mbUseStarType;
            bool mbUseWealth;
            bool mbUseTrading;
            cGcAlienRace UseRace;
            cGcGalaxyStarAnomaly UseAnomaly;
            cGcPlayerConflictData UseConflict;
            cGcGalaxyStarTypes StarType;
            cGcPlanetTradingData TradingData;
            bool mbAllowUnsafeMatches;
            bool mbNeverAllowEmpty;
            bool mbNeverAllowAbandoned;
            bool mbRequireUndiscovered;
            bool mbNeedsWaterPlanet;
            bool mbNeedsPrimePlanet;
            bool mbNeedsSentinels;
            bool mbNeedsExtremeSentinelPlanet;
            bool mbNeverAllowExtremeSentinelPlanet;
            bool mbNeedsExtremeWeatherPlanet;
            bool mbNeedsExtremeHazardPlanet;
            bool mbAnyBiomeNotWeirdOrDead;
            bool mbAnyRGBBiome;
            bool mbAnyInfestedBiome;
            bool mbNeedsBiome;
            cGcBiomeType NeedsBiomeType;
            cGcBiomeSubType UseBiomeSubType;
            bool mbNeedsEmptySystem;
            bool mbNeedsAbandonedSystem;
            TkID<128> mNeedsResourceHint;
            bool mbSuitableForCreatureDiscovery;
            bool mbSuitableForCreatureTaming;
            TkID<256> mSamePlanetAsEvent;
            int miSamePlanetAsSeasonParty;
        };
    };
};

SKYSCRAPER_END
