/**
 * @file gccreaturespawncomponentdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/ecosystem/creatures/gccreaturetypes.meta.h>
#include <simulation/spaceship/ai/gcaispaceshiptypes.meta.h>
#include <utilities/data/gcresourceelement.meta.h>
#include <simulation/ecosystem/gcspawncomponentoption.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eSpawnerMode
 */
enum eSpawnerMode : uint32_t
{
    ESpawnerMode_Hidden = 0,
    ESpawnerMode_Visible = 1,
    ESpawnerMode_HideOnSpawn = 2,
    ESpawnerMode_HiddenTimer = 3,
};

/**
 * @class cGcCreatureSpawnComponentData
 */
class cGcCreatureSpawnComponentData : cTkMetaData::Registrar<cGcCreatureSpawnComponentData>, cTkMetaDataXML::Registrar<cGcCreatureSpawnComponentData>
{
  public:
    enum
    {
        mu64ClassNameHash = 0xCC070D1A8B81739E,
    };
    enum
    {
        mu64TemplateHash = 0x7D4866C5B23CFEE2,
    };

    TkID<128> mTriggerID;
    cTkFixedString<128,char> macModel;
    TkID<128> mCreature;
    cGcCreatureTypes CreatureType;
    cGcAISpaceshipTypes ShipAIOverride;
    cTkSeed mSeed;
    int miFunctionKey;
    float mfTriggerDistance;
    float mfScale;
    float mfStartTimeMin;
    float mfStartTimeMax;
    bool mbSpawnAlert;
    eSpawnerMode SpawnerMode;
    cGcResourceElement SpecificModel;
    cTkDynamicArray<cGcSpawnComponentOption> maSpawnOptionList;
};

SKYSCRAPER_END
