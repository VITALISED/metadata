/**
 * @file gccreaturecrystalmovementdataparams.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <simulation/solarsystem/planet/gcbiomesubtype.meta.h>
#include <audio/gcaudiowwiseevents.meta.h>
#include <toolkit/animation/tkcurvetype.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eDeathType
 */
enum eDeathType : uint32_t
{
    EDeathType_Explode = 0,
    EDeathType_Drop = 1,
};

/**
 * @enum eSubType
 */
enum eSubType : uint32_t
{
    ESubType_Crystal = 0,
    ESubType_Tentacle = 1,
};

/**
 * @class cGcCreatureCrystalMovementDataParams
 */
class cGcCreatureCrystalMovementDataParams : cTkMetaData::Registrar<cGcCreatureCrystalMovementDataParams>, cTkMetaDataXML::Registrar<cGcCreatureCrystalMovementDataParams>
{
  public:
    enum
    {
        mu64ClassNameHash = 0x1232AC16AD2DF95C,
    };
    enum
    {
        mu64TemplateHash = 0x918FDBF743EC6311,
    };

    cTkDynamicArray<cGcBiomeSubType> maValidBiomes;
    cTkDynamicArray<TkID<256>> maValidDescriptors;
    int miNumShards;
    bool mbUseTerrainAngle;
    bool mbScaleOnAppear;
    cGcAudioWwiseEvents CreationAudio;
    float mfSpawnDist;
    float mfDespawnDist;
    float mfMaxOffset;
    float mfMaxOffsetZ;
    float mfMaxTilt;
    float mfOffsetTilt;
    float mfMinScale;
    float mfMaxScale;
    float mfMinAppearTime;
    float mfMaxAppearTime;
    float mfAppearOvershoot;
    float mfMinDisappearTime;
    float mfMaxDisappearTime;
    float mfShowOffset;
    float mfHideOffset;
    float mfMinShowTime;
    bool mbCustomHideCurve;
    cTkCurveType HideCurve;
    float mfIdleSpeedModifier;
    float mfWalkSpeedModifier;
    float mfRunSpeedModifier;
    float mfParticleScale;
    TkID<128> mDustEffect;
    cGcAudioWwiseEvents Audio;
    cGcAudioWwiseEvents RetractAudio;
    cGcAudioWwiseEvents MoveStartAudio;
    cGcAudioWwiseEvents MoveStopAudio;
    float mfDeathFadeStart;
    float mfDeathFadeTime;
    eDeathType DeathType;
    eSubType SubType;
    cTkFixedString<32,char> macTentacleStartJoint;
    cTkFixedString<32,char> macTentacleEndJoint;
    float mfTentacleSpeed;
    float mfTentacleChurnSpeed;
    float mfTentacleIdleLookChance;
    float mfTentacleStretchMin;
    float mfTentacleStretchMax;
    float mfTentacleMoveSwingAngle;
    float mfTentacleWalkSwingSpeed;
    float mfTentacleRunSwingSpeed;
    float mfTentacleRotationApplyBase;
    float mfTentacleRotationApplyTip;
    float mfTentacleMoveTimeMin;
    float mfTentacleMoveTimeMax;
    float mfTentaclePitchRange;
    float mfTentacleYawRange;
    float mfTentacleRollRange;
};

SKYSCRAPER_END
