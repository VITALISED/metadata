/**
 * @file gccreaturespawndata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <utilities/data/gcresourceelement.meta.h>
#include <simulation/environment/gcterraintiletype.meta.h>
#include <simulation/ecosystem/creatures/gccreaturetypes.meta.h>
#include <simulation/ecosystem/gccreatureroles.meta.h>
#include <simulation/ecosystem/gccreaturehemisphere.meta.h>
#include <reality/gcrarity.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcCreatureSpawnData
 */
class cGcCreatureSpawnData : cTkMetaData::Registrar<cGcCreatureSpawnData>, cTkMetaDataXML::Registrar<cGcCreatureSpawnData>
{
  public:
    enum
    {
        mu64ClassNameHash = 0x17AC2C984675F276,
    };
    enum
    {
        mu64TemplateHash = 0xD643FA7CFC3A8317,
    };

    cGcResourceElement Resource;
    cGcResourceElement FemaleResource;
    cGcResourceElement ExtraResource;
    cGcTerrainTileType TileType;
    bool mbSwapPrimaryForSecondaryColour;
    bool mbSwapPrimaryForRandomColour;
    float mfMinScale;
    float mfMaxScale;
    TkID<128> mCreatureID;
    cGcCreatureTypes CreatureType;
    cGcCreatureRoles CreatureRole;
    TkID<256> mFilter;
    int miCreatureMinGroupSize;
    int miCreatureMaxGroupSize;
    float mfCreatureGroupsPerSquareKm;
    cGcCreatureHemiSphere HemiSphere;
    float mfCreatureSpawnDistance;
    float mfCreatureDespawnDistance;
    float mfCreatureActiveInDayChance;
    float mfCreatureActiveInNightChance;
    cGcRarity Rarity;
    bool mbAllowFur;
    bool mbHerd;
    int miRoleDataIndex;
};

SKYSCRAPER_END
