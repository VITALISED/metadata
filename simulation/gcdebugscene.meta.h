/**
 * @file gcdebugscene.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <player/experience/gcexperiencedebugtriggerinput.meta.h>
#include <simulation/npcs/gcnpcdebugspawndata.meta.h>
#include <simulation/ecosystem/creatures/gcpetbehaviours.meta.h>
#include <gamestate/gcpetdata.meta.h>
#include <gamestate/gcpetcustomisationdata.meta.h>
#include <simulation/space/spaceship/gcdebugshiptravelline.meta.h>
#include <simulation/vehicles/gcdebugcamera.meta.h>
#include <simulation/ecosystem/gccreaturedebugspawndata.meta.h>
#include <simulation/vehicles/gcmechdebugspawndata.meta.h>
#include <simulation/spaceship/ai/gcaishipdebugspawndata.meta.h>
#include <graphics/camera/follow/gccamerafollowsettings.meta.h>
#include <toolkit/animation/tkcurvetype.meta.h>
#include <simulation/spaceship/ai/gcdebugplanetpos.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcDebugScene
 */
class cGcDebugScene
{
  public:
    enum
    {
        ClassNameHash = 0xB5B196A1179FFE00,
    };

    inline cGcDebugScene() {}
    cGcDebugScene* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            bool mbActive;
            bool mbDebugDraw;
            bool mbAutoSave;
            cTkDynamicArray<cGcExperienceDebugTriggerInput> maTriggerActions;
            bool mbFlyCamSmooth;
            float mfFlyCamSmoothFactor;
            float mfFlyCamSpeedModifier;
            float mfNPCIdleMinDelay;
            float mfNPCIdleMaxDelay;
            cTkDynamicArray<TkID<128>> maDefaultNPCIdles;
            cTkDynamicArray<cGcNPCDebugSpawnData> maDebugNPCSpawns;
            bool mbLoadPetsFromDebugScene;
            bool mbUpdatePetMoods;
            bool mbResetMoodsOnSummon;
            bool mbShowAccessoryMoods;
            cGcPetBehaviours PetForceBehaviour;
            cTkFixedArray<cGcPetData, 18> maPets;
            cTkFixedArray<cGcPetCustomisationData, 18> maPetAccessoryCustomisation;
            bool mbForcePlayerWalk;
            float mfPlayerWalkSpeed;
            int miPetRideIndex;
            cTkDynamicArray<cTkVector3> maPetRideWayPoints;
            bool mbForceSunPosition;
            cTkVector3 mForcedSunPosition;
            bool mbControlClouds;
            float mfCloudCover;
            float mfCloudAnimScale;
            cTkVector2 mCloudWindOffset;
            cTkVector2 mCloudStratosphereWindOffset;
            bool mbBusyShips;
            float mfCustomShipDockedTime;
            float mfShipSpawningMultiplier;
            cTkDynamicArray<cGcDebugShipTravelLine> maDebugShipPaths;
            cTkDynamicArray<cGcDebugCamera> maDebugCameraPaths;
            cTkDynamicArray<cGcCreatureDebugSpawnData> maDebugCreatureSpawns;
            cTkDynamicArray<cGcMechDebugSpawnData> maDebugMechSpawns;
            cTkDynamicArray<cGcAIShipDebugSpawnData> maDebugEnemyShipSpawns;
            cTkDynamicArray<cGcAIShipDebugSpawnData> maDebugShipSpawns;
            cTkFixedArray<cGcCameraFollowSettings, 7> maVehicleCameraOverride;
            bool mbDebugDroneScanPlayer;
            cTkVector3 mDebugDroneSpawn;
            cTkVector3 mDebugDroneTarget;
            int miDebugNumDrones;
            cTkVector3 mDebugWalkerSpawn;
            cTkVector3 mDebugWalkerTarget;
            cTkVector3 mDebugFlybyTarget;
            cTkVector3 mDebugFlybyDir;
            float mfDebugFlybyRange;
            cTkSeed mDebugFlybySeed;
            TkID<128> mDebugExperienceCamShake;
            cTkVector3 mDebugShipSpawnPos;
            cTkVector3 mDebugShipSpawnFacing;
            cTkVector3 mDebugShipSpawnUp;
            TkID<128> mPulseEncounter;
            TkID<128> mBackgroundSpaceEncounter;
            cTkVector3 mSandwormSpawnPos;
            cTkVector3 mDebugFrigateFlybySpawnPos;
            float mfDebugFrigateFlybyRotation;
            float mfDebugFrigateFlybyHeightOffset;
            TkID<128> mNormandyReward;
            TkID<128> mLivingFrigateReward;
            float mfCameraSpinTime;
            float mfCameraSpinRevolutions;
            float mfCameraSpinVerticalOffset;
            float mfCameraSpinDistanceOffset;
            cTkCurveType CameraSpinEasing;
            cTkFixedArray<cGcDebugPlanetPos, 6> maPlanetPositions;
        };
    };
};

SKYSCRAPER_END
