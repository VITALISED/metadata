/**
 * @file gcsimpleinteractioncomponentdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-15
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <reality/gcrarity.meta.h>
#include <reality/gcsizeindicator.meta.h>
#include <gameplay/gcfiendcrime.meta.h>
#include <gameplay/gcinteractionactivationcost.meta.h>
#include <reality/gcstatsenum.meta.h>
#include <reality/gcdiscoverytype.meta.h>
#include <gameplay/gcinteractionbasebuildingstate.meta.h>
#include <reality/gcrewardmissionoverride.meta.h>
#include <gameplay/gcpersistencymissionoverride.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eSimpleInteractionType
 */
enum eSimpleInteractionType : uint32_t
{
    ESimpleInteractionType_Interact = 0,
    ESimpleInteractionType_Treasure = 1,
    ESimpleInteractionType_Beacon = 2,
    ESimpleInteractionType_Scan = 3,
    ESimpleInteractionType_Save = 4,
    ESimpleInteractionType_CallShip = 5,
    ESimpleInteractionType_CallVehicle = 6,
    ESimpleInteractionType_Word = 7,
    ESimpleInteractionType_Tech = 8,
    ESimpleInteractionType_GenericReward = 9,
    ESimpleInteractionType_Feed = 10,
    ESimpleInteractionType_Ladder = 11,
    ESimpleInteractionType_ClaimBase = 12,
    ESimpleInteractionType_TeleportStartPoint = 13,
    ESimpleInteractionType_TeleportEndPoint = 14,
    ESimpleInteractionType_Portal = 15,
    ESimpleInteractionType_Chest = 16,
    ESimpleInteractionType_ResourceHarvester = 17,
    ESimpleInteractionType_BaseCapsule = 18,
    ESimpleInteractionType_Hologram = 19,
    ESimpleInteractionType_NPCTerminalMessage = 20,
    ESimpleInteractionType_VehicleBoot = 21,
    ESimpleInteractionType_BiomeHarvester = 22,
    ESimpleInteractionType_FreighterGalacticMap = 23,
    ESimpleInteractionType_FreighterChest = 24,
    ESimpleInteractionType_Collectable = 25,
    ESimpleInteractionType_Chair = 26,
    ESimpleInteractionType_BaseTreasureChest = 27,
    ESimpleInteractionType_SpawnObject = 28,
    ESimpleInteractionType_NoiseBox = 29,
    ESimpleInteractionType_AbandFreighterTeleporter = 30,
    ESimpleInteractionType_PetEgg = 31,
    ESimpleInteractionType_SubstancePickup = 32,
    ESimpleInteractionType_FreighterTeleport = 33,
    ESimpleInteractionType_MiniPortalTrigger = 34,
    ESimpleInteractionType_SuperDoopaScanner = 35,
};

/**
 * @class cGcSimpleInteractionComponentData
 */
class cGcSimpleInteractionComponentData
{
  public:
    enum
    {
        ClassNameHash = 0xEAE36C86E1479AF5,
    };

    union
    {
        struct
        {
            eSimpleInteractionType SimpleInteractionType;
            float mfInteractDistance;
            bool mbUse2dInteractDistance;
            TkID<128> mId;
            cGcRarity Rarity;
            cGcSizeIndicator Size;
            TkID<128> mTriggerAction;
            TkID<128> mTriggerActionOnPrepare;
            TkID<128> mTriggerActionToggle;
            bool mbBroadcastTriggerAction;
            float mfDelay;
            bool mbHideContents;
            bool mbInteractIsCrime;
            cGcFiendCrime InteractFiendCrimeType;
            float mfInteractFiendCrimeChance;
            int miInteractCrimeLevel;
            bool mbNotifyEncounter;
            cGcInteractionActivationCost ActivationCost;
            cGcStatsEnum StatToTrack;
            bool mbStartsBuried;
            bool mbMustBeVisibleToInteract;
            bool mbNeedsStorm;
            TkID<256> mName;
            TkID<256> mVRInteractMessage;
            TkID<256> mTerminalHeading;
            TkID<256> mTerminalMessage;
            TkID<256> mScanType;
            TkID<256> mScanData;
            cGcDiscoveryType ScanIcon;
            bool mbActivateLocatorsFromRarity;
            cTkFixedArray<TkID<128>, 3> maRarityLocators;
            cTkDynamicArray<cGcInteractionBaseBuildingState> maBaseBuildingTriggerActions;
            cTkDynamicArray<cGcRewardMissionOverride> maRewardOverrideTable;
            cTkDynamicArray<cGcPersistencyMissionOverride> maPersistencyBufferOverride;
            bool mbUsePersonalPersistentBuffer;
            bool mbReseedOnRewardSuccess;
            bool mbCanCollectInMech;
        };
    };
};

SKYSCRAPER_END
