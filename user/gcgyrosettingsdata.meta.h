/**
 * @file gcgyrosettingsdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-15
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>

SKYSCRAPER_BEGIN

/**
 * @enum eActiveModeOnFoot
 */
enum eActiveModeOnFoot : uint32_t
{
    EActiveModeOnFoot_None = 0,
    EActiveModeOnFoot_ScopeOnly = 1,
    EActiveModeOnFoot_ScopeOrFiring = 2,
    EActiveModeOnFoot_Always = 3,
};

/**
 * @enum eActiveModeWhenBuilding
 */
enum eActiveModeWhenBuilding : uint32_t
{
    EActiveModeWhenBuilding_None = 0,
    EActiveModeWhenBuilding_BuildPlacementOnly = 1,
    EActiveModeWhenBuilding_SelectionModeOnly = 2,
    EActiveModeWhenBuilding_Always = 3,
};

/**
 * @enum eEnableGyroInBuildingFreeCam
 */
enum eEnableGyroInBuildingFreeCam : uint32_t
{
    EEnableGyroInBuildingFreeCam_Never = 0,
    EEnableGyroInBuildingFreeCam_MatchActiveModeWhenBuilding = 1,
    EEnableGyroInBuildingFreeCam_Always = 2,
};

/**
 * @enum eActiveModeInExocraft
 */
enum eActiveModeInExocraft : uint32_t
{
    EActiveModeInExocraft_None = 0,
    EActiveModeInExocraft_Firing = 1,
    EActiveModeInExocraft_Always = 2,
};

/**
 * @enum eLookStickEnabled
 */
enum eLookStickEnabled : uint32_t
{
    ELookStickEnabled_None = 0,
    ELookStickEnabled_Disabled = 1,
    ELookStickEnabled_Enabled = 2,
};

/**
 * @enum eCursorLookStickEnabled
 */
enum eCursorLookStickEnabled : uint32_t
{
    ECursorLookStickEnabled_None = 0,
    ECursorLookStickEnabled_Disabled = 1,
};

/**
 * @enum eHandedness
 */
enum eHandedness : uint32_t
{
    EHandedness_Left = 0,
    EHandedness_Right = 1,
};

/**
 * @enum eGyroRotationSpace
 */
enum eGyroRotationSpace : uint32_t
{
    EGyroRotationSpace_Local = 0,
    EGyroRotationSpace_Player = 1,
};

/**
 * @enum eGyroRotationSpaceHandheld
 */
enum eGyroRotationSpaceHandheld : uint32_t
{
    EGyroRotationSpaceHandheld_Local = 0,
    EGyroRotationSpaceHandheld_Player = 1,
};

/**
 * @enum eYawAxisDirection
 */
enum eYawAxisDirection : uint32_t
{
    EYawAxisDirection_Disabled = 0,
    EYawAxisDirection_Standard = 1,
    EYawAxisDirection_Inverted = 2,
};

/**
 * @enum eRollAxisDirection
 */
enum eRollAxisDirection : uint32_t
{
    ERollAxisDirection_Disabled = 0,
    ERollAxisDirection_Standard = 1,
    ERollAxisDirection_Inverted = 2,
};

/**
 * @enum ePitchAxisDirection
 */
enum ePitchAxisDirection : uint32_t
{
    EPitchAxisDirection_Disabled = 0,
    EPitchAxisDirection_Standard = 1,
    EPitchAxisDirection_Inverted = 2,
};

/**
 * @class cGcGyroSettingsData
 */
class cGcGyroSettingsData
{
  public:
    enum
    {
        ClassNameHash = 0x4EA99277E076565E,
    };

    union
    {
        struct
        {
            bool mbGyroEnabled;
            bool mbGyroEnabledHandheld;
            eActiveModeOnFoot ActiveModeOnFoot;
            bool mbAllowWhenRidingCreatures;
            eActiveModeWhenBuilding ActiveModeWhenBuilding;
            eEnableGyroInBuildingFreeCam EnableGyroInBuildingFreeCam;
            eActiveModeInExocraft ActiveModeInExocraft;
            eLookStickEnabled LookStickEnabled;
            bool mbGyroCursorEnabled;
            float mfCursorSensitivityX;
            float mfCursorSensitivityY;
            float mfCursorTighteningThreshold;
            eCursorLookStickEnabled CursorLookStickEnabled;
            eHandedness Handedness;
            float mfSensitivityX;
            float mfSensitivityY;
            float mfSteadying;
            float mfAcceleration;
            bool mbEnableAdvancedOptions;
            float mfScopeMultiplier;
            float mfAimingMultiplier;
            float mfExocraftMultiplier;
            float mfBuildingMultiplier;
            bool mbZoomScalesSensitivity;
            eGyroRotationSpace GyroRotationSpace;
            eGyroRotationSpaceHandheld GyroRotationSpaceHandheld;
            eYawAxisDirection YawAxisDirection;
            eRollAxisDirection RollAxisDirection;
            ePitchAxisDirection PitchAxisDirection;
            float mfSmoothingThreshold;
            float mfSmoothingWindow;
            float mfTighteningThreshold;
            float mfDeadzone;
            bool mbFilterControllerVibrations;
        };
    };
};

SKYSCRAPER_END
