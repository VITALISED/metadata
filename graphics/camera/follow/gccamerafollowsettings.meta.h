/**
 * @file gccamerafollowsettings.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcCameraFollowSettings
 */
class cGcCameraFollowSettings
{
  public:
    enum
    {
        ClassNameHash = 0x200FDA306DC86654,
    };

    inline cGcCameraFollowSettings() {}
    cGcCameraFollowSettings* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            TkID<128> mName;
            float mfMinSpeed;
            float mfSpeedRange;
            float mfOffsetX;
            float mfOffsetY;
            float mfOffsetYAlt;
            float mfOffsetYSlopeExtra;
            float mfOffsetZFlat;
            float mfBackMinDistance;
            float mfBackMaxDistance;
            float mfBackSlopeAdjust;
            float mfBackSlopeRotationAdjust;
            float mfUpMinDistance;
            float mfUpMaxDistance;
            float mfUpSlopeAdjust;
            float mfLeftMinDistance;
            float mfLeftMaxDistance;
            float mfOffsetYExtraMaxDistance;
            float mfPanNear;
            float mfPanFar;
            float mfUpGamma;
            float mfHorizRotationAngleMaxPerFrame;
            float mfVertRotationSpeed;
            float mfVertRotationMin;
            float mfVertRotationMax;
            float mfVertRotationOffset;
            float mfVertRotationOffsetMinAngle;
            float mfVertRotationOffsetMaxAngle;
            bool mbVertStartLookingDown;
            float mfDistSpeed;
            float mfDistSpeedOutsideMainRange;
            float mfDistStiffness;
            float mfSpringSpeed;
            bool mbLockToObjectOnIdle;
            float mfCenterStartTime;
            float mfCenterBlendTime;
            float mfCenterMaxSpring;
            float mfCenterMaxSpeed;
            float mfVelocityAnticipate;
            float mfVelocityAnticipateSpringSpeed;
            float mfVertMaxSpring;
            float mfCenterStartSpeed;
            float mfLookStickLimitAngle;
            bool mbEnableCollisionDetection;
            int miNumLRProbes;
            float mfLRProbesRange;
            float mfLRProbesRadius;
            int miNumUDProbes;
            float mfUDProbesRange;
            float mfProbeCenterX;
            float mfProbeCenterY;
            float mfPushForwardDropoffLR;
            float mfPushForwardDropoffUD;
            float mfAvoidCollisionLRSpeed;
            float mfAvoidCollisionUDSpeed;
            float mfAvoidCollisionPushSpeed;
            bool mbAvoidCollisionUDUseStickDelay;
            bool mbAvoidCollisionLRUseStickDelay;
            bool mbUseSpeedBasedSpring;
            bool mbUseCustomBlendTime;
            float mfCustomBlendTime;
        };
    };
};

SKYSCRAPER_END
