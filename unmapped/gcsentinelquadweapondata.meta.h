/**
 * @file gcsentinelquadweapondata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-13
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <audio/gcaudiowwiseevents.meta.h>

SKYSCRAPER_BEGIN

/**
 * @class cGcSentinelQuadWeaponData
 */
class cGcSentinelQuadWeaponData
{
  public:
    enum
    {
        ClassNameHash = 0x9CD171737A52721E,
    };

    union
    {
        struct
        {
            TkID<128> mId;
            float mfFireTimeMin;
            float mfFireTimeMax;
            float mfMinRange;
            float mfMaxRange;
            float mfMaxAttackAngle;
            float mfTimeout;
            TkID<128> mFiringIdleAnimId;
            cTkFixedString<32,char> macShootLocatorName;
            TkID<128> mMuzzleFlashEffect;
            cGcAudioWwiseEvents StartFireAudioEvent;
            cGcAudioWwiseEvents StopFireAudioEvent;
            TkID<128> mChargingIdleAnimId;
            float mfChargeTime;
            float mfChargeLightIntensity;
            TkID<128> mProjectileId;
            int miNumProjectiles;
            float mfProjectileSpread;
            float mfFireInterval;
            int miNumShotsMin;
            int miNumShotsMax;
            float mfExplosionRadius;
            float mfInheritInitialVelocity;
            TkID<128> mLaunchProjectileAnimId;
        };
    };
};

SKYSCRAPER_END
