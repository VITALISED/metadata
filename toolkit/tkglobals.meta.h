/**
 * @file tkglobals.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
                                
SKYSCRAPER_BEGIN

/**
 * @enum eAssertsLevel
 */
enum eAssertsLevel : uint32_t
{
    EAssertsLevel_Disabled = 0,
    EAssertsLevel_Ignored = 1,
    EAssertsLevel_Skipped = 2,
    EAssertsLevel_Enabled = 3,
};

/**
 * @enum eEnabledChannels
 */
enum exEnabledChannels : uint32_t
{
FEnabledChannels_Default = 1,
FEnabledChannels_Note = 2,
FEnabledChannels_Error = 4,
FEnabledChannels_Warning = 8,
FEnabledChannels_Info = 16,
FEnabledChannels_Alt = 32,
FEnabledChannels_AltWarn = 64,
FEnabledChannels_AltError = 128,
};

/**
 * @class cTkGlobals
 */
class cTkGlobals
{
  public:
    enum
    {
        ClassNameHash = 0xB62E6456DFE47836,
    };

    inline cTkGlobals() {}
    cTkGlobals* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            eAssertsLevel AssertsLevel;
            bool mbDefaultSelectIgnoreAsserts;
            exEnabledChannels EnabledChannels;
            cTkFixedString<256,char> macIncludeLogFilter;
            cTkFixedString<256,char> macExcludeLogFilter;
            int miLoadBalanceTimeoutMS;
            int miVRLoadBalanceTimeoutMS;
            int miPSVR2LoadBalanceTimeoutMS;
            bool mbLogInputSetup;
            bool mbLogInputChanges;
            bool mbDisableResScaling;
            int miLODOverride;
            bool mbColourLODs;
            float mfWwiseVibrationMultiplierPrimary;
            float mfWwiseVibrationMultiplierSecondary;
            bool mbUseHeavyAir;
            bool mbSimulateDisabledParticleRefractions;
            bool mbDisableMultiplayer;
        };
    };
};

SKYSCRAPER_END
