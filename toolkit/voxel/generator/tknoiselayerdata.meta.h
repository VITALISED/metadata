/**
 * @file tknoiselayerdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>

SKYSCRAPER_BEGIN

/**
 * @enum eNoiseType
 */
enum eNoiseType : uint32_t
{
    ENoiseType_Plane = 0,
    ENoiseType_Check = 1,
    ENoiseType_Sine = 2,
    ENoiseType_Smooth = 3,
    ENoiseType_Fractal = 4,
    ENoiseType_Ridged = 5,
    ENoiseType_Billow = 6,
    ENoiseType_Erosion = 7,
    ENoiseType_Volcanic = 8,
    ENoiseType_Glacial = 9,
    ENoiseType_Plateau = 10,
};

/**
 * @class cTkNoiseLayerData
 */
class cTkNoiseLayerData
{
  public:
    enum
    {
        ClassNameHash = 0x474596B01166F6A6,
    };

    inline cTkNoiseLayerData() {}
    cTkNoiseLayerData* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            bool mbActive;
            bool mbInvert;
            bool mbAbsolute;
            bool mbSubtract;
            eNoiseType NoiseType;
            float mfHeight;
            float mfWidth;
            int miOctaves;
            float mfFrequencyScaleY;
            float mfRegionRatio;
            float mfRegionScale;
            float mfTurbulenceFrequency;
            float mfTurbulenceAmplitude;
            int miTurbulenceOctaves;
            int miSeedOffset;
        };
    };
};

SKYSCRAPER_END
