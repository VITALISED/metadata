/**
 * @file tknoisegriddata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <toolkit/voxel/generator/tknoisevoxeltypeenum.meta.h>
#include <toolkit/voxel/generator/tknoiseoffsetenum.meta.h>
#include <toolkit/voxel/generator/tknoiseuberlayerdata.meta.h>
#include <toolkit/voxel/generator/tknoisesuperformuladata.meta.h>
#include <toolkit/voxel/generator/tknoisesuperprimitivedata.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eNoiseGridType
 */
enum eNoiseGridType : uint32_t
{
    ENoiseGridType_Cube = 0,
    ENoiseGridType_Cone = 1,
    ENoiseGridType_Torus = 2,
    ENoiseGridType_Sphere = 3,
    ENoiseGridType_Cylinder = 4,
    ENoiseGridType_Capsule = 5,
    ENoiseGridType_Corridor = 6,
    ENoiseGridType_Pipe = 7,
    ENoiseGridType_Puck = 8,
    ENoiseGridType_SuperPrimitiveRandom = 9,
    ENoiseGridType_SuperFormula_01 = 10,
    ENoiseGridType_SuperFormula_02 = 11,
    ENoiseGridType_SuperFormula_03 = 12,
    ENoiseGridType_SuperFormula_04 = 13,
    ENoiseGridType_SuperFormula_05 = 14,
    ENoiseGridType_SuperFormula_06 = 15,
    ENoiseGridType_SuperFormula_07 = 16,
    ENoiseGridType_SuperFormula_08 = 17,
    ENoiseGridType_SuperFormulaRandom = 18,
    ENoiseGridType_SuperFormula = 19,
    ENoiseGridType_SuperPrimitive = 20,
    ENoiseGridType_File = 21,
};

/**
 * @class cTkNoiseGridData
 */
class cTkNoiseGridData : cTkMetaData::Registrar<cTkNoiseGridData>, cTkMetaDataXML::Registrar<cTkNoiseGridData>
{
  public:
    enum
    {
        mu64ClassNameHash = 0xA45052EB66E281C7,
    };
    enum
    {
        mu64TemplateHash = 0x4C8832CFE3785F00,
    };

    bool mbActive;
    int miMaximumLOD;
    bool mbSubtract;
    bool mbSwapZY;
    bool mbHemisphere;
    cTkNoiseVoxelTypeEnum VoxelType;
    eNoiseGridType NoiseGridType;
    cTkFixedString<128,char> macFilename;
    float mfMinWidth;
    float mfMaxWidth;
    float mfMinHeight;
    float mfMaxHeight;
    float mfMinHeightOffset;
    float mfMaxHeightOffset;
    float mfHeightOffset;
    cTkNoiseOffsetEnum Offset;
    float mfRegionRatio;
    float mfRegionScale;
    cTkNoiseUberLayerData TurbulenceNoiseLayer;
    float mfYaw;
    float mfPitch;
    float mfRoll;
    float mfVaryYaw;
    float mfVaryPitch;
    float mfVaryRoll;
    float mfSmoothRadius;
    int miSeedOffset;
    float mfRandomPrimitive;
    cTkNoiseSuperFormulaData SuperFormula1;
    cTkNoiseSuperFormulaData SuperFormula2;
    cTkNoiseSuperPrimitiveData SuperPrimitive;
    float mfTileBlendMeters;
};

SKYSCRAPER_END
