/**
 * @file tkanimationdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-24
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <toolkit/animation/tkanimationgamedata.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eAnimType
 */
enum eAnimType : uint32_t
{
    EAnimType_Loop = 0,
    EAnimType_OneShot = 1,
    EAnimType_Control = 2,
    EAnimType_OneShotBlendable = 3,
};

/**
 * @enum eCreatureSize
 */
enum eCreatureSize : uint32_t
{
    ECreatureSize_AllSizes = 0,
    ECreatureSize_SmallOnly = 1,
    ECreatureSize_LargeOnly = 2,
};

/**
 * @class cTkAnimationData
 */
class cTkAnimationData
{
  public:
    enum
    {
        ClassNameHash = 0x3A0F3C26A4978A6F,
    };

    inline cTkAnimationData() {}
    cTkAnimationData* Cast(cTkClassPointer* lClassPtr);

    union
    {
        struct
        {
            TkID<128> mAnim;
            TkID<128> mAdditiveBaseAnim;
            cTkFixedString<128,char> macFilename;
            cTkFixedString<64,char> macStartNode;
            cTkDynamicArray<cTkFixedString<64,char>> maExtraStartNodes;
            cTkAnimationGameData GameData;
            int miFrameStart;
            int miFrameEnd;
            int miPriority;
            float mfOffsetMin;
            float mfOffsetMax;
            float mfDelay;
            float mfSpeed;
            float mfActionStartFrame;
            float mfActionFrame;
            float mfAdditiveBaseFrame;
            eAnimType AnimType;
            eCreatureSize CreatureSize;
            bool mbAdditive;
            bool mbMirrored;
            bool mbActive;
            bool mbHas30HzFrames;
        };
    };
};

SKYSCRAPER_END
