/**
 * @file tkgraphicsdetailpreset.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <toolkit/enginesettings/tkgraphicsdetailtypes.meta.h>
#include <toolkit/enginesettings/tkdynamicresscalingsettings.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eUIQuality
 */
enum eUIQuality : uint32_t
{
    EUIQuality_Normal = 0,
    EUIQuality_4K = 1,
};

/**
 * @enum eDLSSQuality
 */
enum eDLSSQuality : uint32_t
{
    EDLSSQuality_MaxPerformance = 0,
    EDLSSQuality_Balanced = 1,
    EDLSSQuality_MaxQuality = 2,
    EDLSSQuality_UltraPerformance = 3,
    EDLSSQuality_UltraQuality = 4,
};

/**
 * @enum eFFXSRQuality
 */
enum eFFXSRQuality : uint32_t
{
    EFFXSRQuality_Off = 0,
    EFFXSRQuality_UltraQuality = 1,
    EFFXSRQuality_Quality = 2,
    EFFXSRQuality_Balanced = 3,
    EFFXSRQuality_Performance = 4,
};

/**
 * @enum eFFXSR2Quality
 */
enum eFFXSR2Quality : uint32_t
{
    EFFXSR2Quality_UltraPerformance = 0,
    EFFXSR2Quality_Performance = 1,
    EFFXSR2Quality_Balanced = 2,
    EFFXSR2Quality_Quality = 3,
};

/**
 * @enum eXESSQuality
 */
enum eXESSQuality : uint32_t
{
    EXESSQuality_UltraPerformance = 0,
    EXESSQuality_Performance = 1,
    EXESSQuality_Balanced = 2,
    EXESSQuality_MaxQuality = 3,
    EXESSQuality_UltraQuality = 4,
};

/**
 * @enum eAmbientOcclusion
 */
enum eAmbientOcclusion : uint32_t
{
    EAmbientOcclusion_Off = 0,
    EAmbientOcclusion_GTAO_Low = 1,
    EAmbientOcclusion_GTAO_Medium = 2,
    EAmbientOcclusion_GTAO_High = 3,
    EAmbientOcclusion_GTAO_Ultra = 4,
    EAmbientOcclusion_HBAO_Low = 5,
    EAmbientOcclusion_HBAO_High = 6,
};

/**
 * @enum eAnisotropyLevel
 */
enum eAnisotropyLevel : uint32_t
{
    EAnisotropyLevel_1 = 0,
    EAnisotropyLevel_2 = 1,
    EAnisotropyLevel_4 = 2,
    EAnisotropyLevel_8 = 3,
    EAnisotropyLevel_16 = 4,
};

/**
 * @enum eAntiAliasing
 */
enum eAntiAliasing : uint32_t
{
    EAntiAliasing_None = 0,
    EAntiAliasing_TAA_LOW = 1,
    EAntiAliasing_TAA = 2,
    EAntiAliasing_FXAA = 3,
    EAntiAliasing_FFXSR2 = 4,
    EAntiAliasing_DLSS = 5,
    EAntiAliasing_DLAA = 6,
    EAntiAliasing_XESS = 7,
};

/**
 * @class cTkGraphicsDetailPreset
 */
class cTkGraphicsDetailPreset : cTkMetaData::Registrar<cTkGraphicsDetailPreset>, cTkMetaDataXML::Registrar<cTkGraphicsDetailPreset>
{
  public:
    enum
    {
        mu64ClassNameHash = 0x56E0EB96EB3713F0,
    };
    enum
    {
        mu64TemplateHash = 0xB319768677055F79,
    };

    cTkGraphicsDetailTypes TextureQuality;
    cTkGraphicsDetailTypes AnimationQuality;
    cTkGraphicsDetailTypes ShadowQuality;
    cTkGraphicsDetailTypes PostProcessingEffects;
    cTkGraphicsDetailTypes ReflectionsQuality;
    cTkGraphicsDetailTypes VolumetricsQuality;
    cTkGraphicsDetailTypes TerrainTessellation;
    cTkGraphicsDetailTypes PlanetQuality;
    cTkGraphicsDetailTypes BaseQuality;
    eUIQuality UIQuality;
    eDLSSQuality DLSSQuality;
    eFFXSRQuality FFXSRQuality;
    eFFXSR2Quality FFXSR2Quality;
    eXESSQuality XESSQuality;
    eAmbientOcclusion AmbientOcclusion;
    eAnisotropyLevel AnisotropyLevel;
    eAntiAliasing AntiAliasing;
    cTkDynamicResScalingSettings DynamicResScalingSettings;
};

SKYSCRAPER_END
