/**
 * @file tkparticledata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>
#include <toolkit/utilities/data/tkparticleburstdata.meta.h>
#include <toolkit/utilities/data/tkemitterfloatproperty.meta.h>
#include <toolkit/utilities/data/tkemitfromparticleinfo.meta.h>
#include <toolkit/animation/tkcurvetype.meta.h>
#include <toolkit/utilities/data/tkcoordinateorientation.meta.h>
#include <toolkit/tkfloatrange.meta.h>

SKYSCRAPER_BEGIN

/**
 * @enum eDragType
 */
enum eDragType : uint32_t
{
    EDragType_IgnoreGravity = 0,
    EDragType_PhysicallyBased = 1,
    EDragType_ApplyWind = 2,
};

/**
 * @enum eSpawnOffsetType
 */
enum eSpawnOffsetType : uint32_t
{
    ESpawnOffsetType_Sphere = 0,
    ESpawnOffsetType_Box = 1,
    ESpawnOffsetType_Disc = 2,
    ESpawnOffsetType_Cone = 3,
    ESpawnOffsetType_Donut = 4,
    ESpawnOffsetType_Point = 5,
};

/**
 * @enum eAlignment
 */
enum eAlignment : uint32_t
{
    EAlignment_Rotation = 0,
    EAlignment_Velocity = 1,
    EAlignment_VelocityScreenSpace = 2,
};

/**
 * @enum eBillboardAlignment
 */
enum eBillboardAlignment : uint32_t
{
    EBillboardAlignment_Screen = 0,
    EBillboardAlignment_XLocal = 1,
    EBillboardAlignment_YLocal = 2,
    EBillboardAlignment_ZLocal = 3,
    EBillboardAlignment_NegativeXLocal = 4,
    EBillboardAlignment_NegativeYLocal = 5,
    EBillboardAlignment_NegativeZLocal = 6,
    EBillboardAlignment_ScreenWorld = 7,
};

/**
 * @enum eFlipbookPlaybackRate
 */
enum eFlipbookPlaybackRate : uint32_t
{
    EFlipbookPlaybackRate_Absolute = 0,
    EFlipbookPlaybackRate_RelativeToMax = 1,
    EFlipbookPlaybackRate_OnceToCompletion = 2,
    EFlipbookPlaybackRate_Random = 3,
};

/**
 * @enum eOnRefractionsDisabled
 */
enum eOnRefractionsDisabled : uint32_t
{
    EOnRefractionsDisabled_Hide = 0,
    EOnRefractionsDisabled_AlphaBlend = 1,
};

/**
 * @class cTkParticleData
 */
class cTkParticleData : cTkMetaData::Registrar<cTkParticleData>, cTkMetaDataXML::Registrar<cTkParticleData>
{
  public:
    enum
    {
        mu64ClassNameHash = 0xE9525144C4F949EB,
    };
    enum
    {
        mu64TemplateHash = 0x353F8C32388B38B0,
    };

    unsigned int muiAudioEvent;
    bool mbStartEnabled;
    bool mbOneshot;
    int miMaxCount;
    cTkParticleBurstData BurstData;
    cTkEmitterFloatProperty EmissionRate;
    float mfDelay;
    cTkEmitFromParticleInfo EmitFromParticleInfo;
    cTkEmitterFloatProperty ParticleLife;
    cTkEmitterFloatProperty EmitterLife;
    float mfEmitterMidLifeRatio;
    cTkCurveType EmitterLifeCurve1;
    cTkCurveType EmitterLifeCurve2;
    float mfEmitterSpreadAngle;
    float mfEmitterSpreadAngleMin;
    cTkVector3 mEmitterDirection;
    cTkEmitterFloatProperty ParticleSpeedMultiplier;
    cTkEmitterFloatProperty ParticleGravity;
    cTkEmitterFloatProperty ParticleDamping;
    cTkEmitterFloatProperty ParticleDrag;
    eDragType DragType;
    float mfVariation;
    float mfStartOffset;
    eSpawnOffsetType SpawnOffsetType;
    cTkVector3 mSpawnOffsetParams;
    cTkEmitterFloatProperty ParticleSize;
    cTkEmitterFloatProperty ParticleSizeY;
    float mfStartRotationVariation;
    cTkEmitterFloatProperty Rotation;
    eAlignment Alignment;
    eBillboardAlignment BillboardAlignment;
    cTkVector3 mRotationPivot;
    cTkCoordinateOrientation UCoordinate;
    cTkCoordinateOrientation VCoordinate;
    float mfVelocityInheritance;
    float mfTrackEmitterPosition;
    float mfRotateAroundEmitter;
    cTkVector3 mRotateAroundEmitterAxis;
    eFlipbookPlaybackRate FlipbookPlaybackRate;
    float mfHueVariance;
    float mfSaturationVariance;
    float mfLightnessVariance;
    float mfAlphaVariance;
    cTkColour mColourStart;
    cTkColour mColourMiddle;
    cTkColour mColourEnd;
    cTkEmitterFloatProperty AlphaThreshold;
    eOnRefractionsDisabled OnRefractionsDisabled;
    bool mbFadeRefractionsAtScreenEdge;
    TkID<128> mUserColour;
    float mfMaxRenderDistance;
    float mfMaxSpawnDistance;
    float mfSoftFadeStrength;
    cTkFloatRange CameraDistanceFade;
};

SKYSCRAPER_END
