/**
 * @file tkheavyairdata.meta.h
 * @author VITALISED & Contributors
 * @since 2023-12-06
 * @version v101236
 * @brief This file is autogenerated metadata created by Heridium for ReNMS. You shouldn't need to modify this, see https://github.com/VITALISED/renms.
 *
 * Copyright (C) 2023  VITALISED & Contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <toolkit/data/TkMetaDataClasses.h>

SKYSCRAPER_BEGIN

/**
 * @enum eEmitterShape
 */
enum eEmitterShape : uint32_t
{
    EEmitterShape_Sphere = 0,
    EEmitterShape_UpperHalfSphere = 1,
    EEmitterShape_BottomHalfSphere = 2,
};

/**
 * @class cTkHeavyAirData
 */
class cTkHeavyAirData : cTkMetaData::Registrar<cTkHeavyAirData>, cTkMetaDataXML::Registrar<cTkHeavyAirData>
{
  public:
    enum
    {
        mu64ClassNameHash = 0xCB25F378CA730AFC,
    };
    enum
    {
        mu64TemplateHash = 0x5ED48C0489FB7DD4,
    };

    cTkFixedString<128,char> macMaterial;
    int miNumberOfParticles;
    float mfRadius;
    float mfRadiusY;
    float mfMinParticleLifetime;
    float mfMaxParticleLifetime;
    float mfFadeTime;
    float mfSpeedFadeInTime;
    float mfMinVisibleSpeed;
    float mfSpeedFadeOutTime;
    float mfMaxVisibleSpeed;
    float mfSoftFadeStrength;
    float mfSpawnRotationRange;
    cTkVector3 mMajorDirection;
    cTkVector3 mScaleRange;
    cTkVector3 mRotationSpeedRange;
    cTkVector3 mTwinkleRange;
    cTkVector3 mAmplitudeMin;
    cTkVector3 mAmplitudeMax;
    cTkColour mColour1;
    cTkColour mColour2;
    eEmitterShape EmitterShape;
};

SKYSCRAPER_END
